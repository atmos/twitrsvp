.intro
  - if @event.new_record?
    %h1= "Welcome #{current_user.name},"
    %p In order to get things going you just need to fill out the following fields.
  - else
    %h1= "Editing: #{@event.name}"
    %p Updates to this event will notify your invitees via direct messages.

  - if @event.errors.any?
    .message.decline
      - @event.errors.each do |errors|
        %h2.orange= errors.join(',')
        .clear

%form{:action => (@form_path||'/events'), :method => 'POST'}
  - unless @event.new_record?
    %input{:type => 'hidden', :name => '_method', :value => 'put'}
  .left
    %label{:for => 'name'}
      %h2 
        Name of Event:
        %span.orange *
      - css_class = @event.errors.on(:name).nil? ? '' : 'form_errors'
      %input{:type => 'text', :name => 'name', :size => 26, :value => @event.name, :class => css_class}
  .left
    %label{:for => 'place'}
      %h2 
        Location:
        %span.orange *
      - css_class = @event.errors.on(:place).nil? ? '' : 'form_errors'
      %input{:type => 'text', :name => 'place', :size => 26, :value => @event.place, :class => css_class}
  .clear
    %label{:for => 'address'}
      %h2 Address:
      %textarea{:name => 'address', :rows => 2, :columns => 76}
        = @event.address
  .left
    %label{:for => 'start_date'}
      %h2 
        Date:
        %span.orange *
      - css_class = @event.errors.on(:start_at).nil? ? '' : 'form_errors'
      %input.date-picker.left{:type => 'text', :name => 'start_date', :size => 15, :value => TwitRSVP.date_format(@event.start_time), :class => css_class }
  .left
    %label{:for => 'start_time'}
      %h2 
        Time:
        %span.orange *
      - css_class = @event.errors.on(:start_at).nil? ? '' : 'form_errors'
      %input.time-picker.left{:type => 'text', :name => 'start_time', :size => 10, :value => TwitRSVP.time_format(@event.start_time), :class => css_class }
      / %a.time.left{:href => '#'} time
  .clear
    %label{:for => 'description'}
      %h2
        Description:
        %span#charlimitinfo.context.orange (char left: 140)
      - css_class = @event.errors.on(:description).nil? ? '' : 'form_errors'
      %textarea{:name => 'description', :rows => 3, :columns => 76, :class => css_class }
        = @event.description
  .clear
    %label{:for => 'usernames'}
      %h2.left 
        Who would you like to invite?
        %span.orange *
      / %a.invite.left{:href => '#'} Invite
      %textarea{:name => 'usernames', :rows => 5, :columns => 76}
        = params['usernames']
      %p.context Twitter names to invite, separated by commas.  These are the names you normally @reply.  You can only invite people that follow you at this time.
      - unless @event.new_record?
        %p.message.accept
          You've already invited these people:
          = event_attendees_links(@event)

  - if @event.new_record?
    %input.submit{:type => 'submit', :value => 'Create!'}
  - else
    %input.submit{:type => 'submit', :value => 'Done Editing!'}
  %a.unsubmit.negative{:href => @event.new_record? ? '/manage' : event_url(@event)} Oh Nevermind
